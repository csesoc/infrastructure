# This playbook configures a Ubuntu installation from scratch. It attempts to lock down the machine by enabling the
# firewall and disabling SSH root access and forcing passwordless access.
---
- import_playbook: ssh-access.playbook.yml

- name: Configure Firewall (ufw)
  hosts: all
  tags: security
  tasks:
    - name: Allow OpenSSH
      ufw:
        rule: allow
        name: OpenSSH
    - name: Allow HTTP Access (80)
      ufw:
        rule: allow
        port: 80
    - name: Allow HTTPS Access (443)
      ufw:
        rule: allow
        port: 443
    - name: Allow Rancher Access (7654)
      ufw:
        rule: allow
        port: 7654
    - name: Enable UFW and Block All
      ufw:
        state: enabled
        policy: deny

- name: Disable SSH password authentication
  hosts: all
  tags: security
  roles:
    - name: willshersystems.sshd
      sshd:
        PasswordAuthentication: no
        PermitRootLogin: no

- name: Configure fail2ban
  hosts: all
  tags: security
  roles:
    - role: nickjj.fail2ban
      sudo: true
      fail2ban_destemail: root@localhost
      fail2ban_services:
        - name: ssh
          port: ssh
          filter: sshd
          logpath: /var/log/auth.log

- name: Install Docker
  hosts: all
  tags: docker
  roles:
    - role: geerlingguy.pip
      pip_install_packages:
        - name: docker
    - role: geerlingguy.docker
  tasks:
    - name: Add user {{ ansible_user }} to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

- hosts: all
  name: Unattended Upgrades
  roles:
    - role: jnv.unattended-upgrades
      unattended_mail: root@localhost
      unattended_automatic_reboot_time: 02:00
      unattended_automatic_reboot: yes
      unattended_origins_patterns:
        - 'origin=Ubuntu,archive=${distro_codename}-security'
        - 'o=Ubuntu,a=${distro_codename}'
        - 'o=Ubuntu,a=${distro_codename}-updates'
        - 'o=Ubuntu,a=${distro_codename}-proposed-updates'
